---
title: "cleaning_and_exploratory"
title_project: "Cancer epidemiology and "
format: html
editor: visual
---

# References

-   Profiling global cancer incidence and mortality by socioeconomic development (doi:10.1002/ijc.33114) Here, 175 countries were included and 27 cancer types were evaluated

-   Current and future burden of breast cancer: Global statistics for 2020 and 2040 https://doi.org/10.1016/j.breast.2022.08.010 - 185 countries or territories were included - by sex and 18 age groups

-   Global burden of female breast cancer and its association with socioeconomic development status, 1990â€“2044 - 204 countries - Exposure variables: Metabolic factors and SDI

# Load packages

```{r include = FALSE}
library(tidyverse)
library(skimr)
library(janitor)
library(rstatix)
library(ggpubr)
```

# Import data

```{r include=FALSE}
globocan_mortality <- read_csv("~/globocan_and_factors/raw_data/globocan_mortality.csv")
globocan_incidence <- read_csv("~/globocan_and_factors/raw_data/globocan_incidence.csv")
cancer_code <- read.csv("~/globocan_and_factors/raw_data/cancer_code.csv", stringsAsFactors=TRUE)

hdi_and_comp_2022 = read.csv("~/globocan_and_factors/raw_data/hdi_and_composites_2022.csv")
hdi_and_comp_2017 = read.csv("~/globocan_and_factors/raw_data/hdi_and_composites_2017.csv")
sdi_2018_to_2021 = read.csv("~/globocan_and_factors/raw_data/SDI_2018to2021.csv")
```

## Function to calculate Education and Income (EdI) Index

It is based on the study of Lortet-Tieulent et al. (2020). Set values test 2. Step 1.

test 1. max_EYS = 20, max_MYS = 15, min_GNI = 100, max_GNI = 75000 EdI Panama = 0.7225345, EdI Panama = 0.742 (reference)

test 2. max_EYS = 20, max_MYS = 15, min_GNI = 100, max_GNI = 75000

```{r}
# Define the function to calculate EdI
calculate_EdI <- function(EYS, MYS, GNI_per_capita, 
                          max_EYS = 20, max_MYS = 15, 
                          min_GNI = 100, max_GNI = 75000) {
  
  # Normalize education indicators
  norm_EYS <- EYS / max_EYS
  norm_MYS <- MYS / max_MYS
  education_index <- (norm_EYS + norm_MYS) / 2
  
  # Normalize GNI per capita
  norm_GNI <- (log(GNI_per_capita) - log(min_GNI)) / (log(max_GNI) - log(min_GNI))
  
  # Calculate EdI
  EdI <- sqrt(education_index * norm_GNI)
  
  return(EdI)
}
```

# Tidying data

## Epidemiological data

```{r include=FALSE}
globocan = clean_names(rbind(globocan_incidence, globocan_mortality))
cancer_code = clean_names(cancer_code)

globocan_0 <- merge(globocan, cancer_code, by = "cancer_code", all.x = TRUE)

globocan_0 = 
  globocan_0 |>
  rename(cancer_type = "label.y",
        Country_name = "label.x") |>
  filter(Country_name != "Total") 

countries_with_epid_data = unique(globocan_0$Country_name)
```

## Socioeconomic indicators

```{r}
sdi_2018_to_2021 =
  sdi_2018_to_2021 |> rename(Country = Location) 
```

Korea (Democratic People's Rep. of) and Monaco were removed because there were no data available regarding HDI and HDI's composites.

The following countries or regions are considered as Developing: Arab States, East Asia and the Pacific, Europe and Central Asia, Latin America and the Caribbean, South Asia, Sub-Saharan Africa.

Cabo verde, France, and Netherlands (as appeared on hdi_andcom_2022) have been changed to Cape verde, France (metropolitans), and The Netherlands (Metropolitan)

Total = World Global estimation

## Calculate EdI

```{r}
# Apply the calculate_EdI function to the dataframe
hdi_and_comp_2022_0 <- hdi_and_comp_2022 |> 
  mutate(EdI = calculate_EdI(MYS = Mean_years_of_schooling_y,
                             EYS = Expected_years_of_schooling_y,
                             GNI_per_capita = GNI_per_capita_2017PPP_dolar))
```

#### Filtering countries wthat have indicator & epidemiological data

```{r}
dim(hdi_and_comp_2022) # [1] 194  10
dim(hdi_and_comp_2017) # [1] 196  10
dim(sdi_2018_to_2021) # [1] 229   5

sdi_218_to_2021_0 =
  sdi_2018_to_2021 |> 
  filter(sdi_2018_to_2021$Country %in% countries_with_epid_data) ##

hdi_and_comp_2017_0 = 
  hdi_and_comp_2017 |>
  filter(hdi_and_comp_2017$Country %in% countries_with_epid_data)

hdi_and_comp_2022_0 = 
  hdi_and_comp_2022_0 |>
  filter(hdi_and_comp_2022_0$Country %in% countries_with_epid_data) |> 
  rename(Country_name = "Country")

dim(hdi_and_comp_2017_0) # [1] 171  10
dim(hdi_and_comp_2022_0) # [1] 176  10
dim(sdi_218_to_2021_0) # [1] 158   5

# Countries without indicator data
setdiff(countries_with_epid_data, hdi_and_comp_2022_0$Country) ## correct the names !
```

### Matching epidemiological data and indicators 

```{r}
globocan_1 = globocan_0 %>%
  left_join(hdi_and_comp_2022_0, by = "Country_name")
```

## Exploratory data analysis

### Globocan

```{r include=FALSE}
dim(globocan_0) ## [1] 14136 observations
length(unique(globocan_0$label)) ## [1] 186 countries
length(unique(globocan$cancer_code)) ## [1] 39 types of cancer (including those grouped)
dim(globocan |> filter(indicator == "incidence")) ## [1] 7068   11
dim(globocan |> filter(indicator == "mortality")) ## [1] 7068   11
```

#### Statistics by indicator

```{r}
globocan_1 |> 
  filter(indicator == "incidence") |> 
  skim()
globocan_1 |> 
  filter(indicator == "mortality") |> 
  skim()
skim()

globocan_1
```

## Visual inspection

### HDI and composites

```{r}
globocan_1 |> 
  filter(hdi_category != "") |> 
  ggplot(aes(x = Human_Development_Index)) +
  geom_histogram() +
  facet_wrap(~hdi_category, scales = "free")
```

```{r}
bar_cat = 
  globocan_1 |>
  ggplot(aes(hdi_category)) + 
  geom_bar()

prop_table = 
  globocan_1 |>
  count(hdi_category) |> 
  mutate(proportion = n/sum(n)) |> 
  ggplot(aes(hdi_category, proportion)) + 
  geom_bar(stat = "identity")

ggarrange(bar_cat, prop_table)
```
```{r}
edi_cat = 
  globocan_1 |>
  ggplot(aes(EdI)) + 
  geom_bar()
```


```{r}
p_hdi = 
  globocan_1 |>
  filter(hdi_category != "") |> 
  ggplot(aes(x = Human_Development_Index)) +
  geom_histogram()

p_Edi =
  globocan_1 |>
  filter(EdI != "") |> 
  ggplot(aes(x = EdI)) +
  geom_histogram()

ggarrange(p_hdi, p_Edi)
```

### Globocan

```{r}
# Histogram
globocan_0 |> 
  filter(indicator == "incidence") |> 
  ggplot(aes(asr_world)) + 
  geom_histogram() +
  facet_wrap(~cancer_type,
             scales = "free")

globocan_0 |> 
  filter(indicator == "mortality") |> 
  ggplot(aes(asr_world)) + 
  geom_histogram() +
  facet_wrap(~cancer_type,
             scales = "free")

globocan_0 |> 
  filter(indicator == "incidence") |> 
  ggplot(aes(crude_rate)) + 
  geom_histogram() +
  facet_wrap(~cancer_type,
             scales = "free")
```

### Scatterplots

```{r}

globocan_1 |> 
  ggplot(aes(EdI, asr_world)) +
  geom_point() +
  facet_wrap(~cancer_type, 
             scales = "free")


globocan_1 |>
  filter(indicator == "incidence") |> 
  ggplot(aes(EdI, asr_world)) +
  geom_point() +
  facet_wrap(~cancer_type, 
             scales = "free")



globocan_1 |> 
  filter(cancer_type == "Breast") |> 
  ggplot(aes(EdI, asr_world)) +
  geom_point()
```

